// Cloudflare Pages Functions middleware for bot rendering
// This runs at the edge before serving static files

interface Env {
  ASSETS: {
    fetch: (request: Request) => Promise<Response>;
  };
}

export async function onRequest(context: {
  request: Request;
  env: Env;
  next: () => Promise<Response>;
}) {
  const userAgent = context.request.headers.get('user-agent') || '';
  const url = new URL(context.request.url);
  
  // Enhanced bot detection including AI crawlers
  const isBot = /bot|crawler|spider|googlebot|bingbot|slurp|duckduckbot|baiduspider|yandex|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkshare|w3c_validator|whatsapp|GPTBot|ClaudeBot|PerplexityBot|Applebot|Amazonbot/i.test(userAgent);
  
  if (isBot) {
    console.log(`Bot detected: ${userAgent} accessing ${url.pathname}`);
    
    // Serve pre-rendered HTML (generated by react-snap)
    // react-snap creates static HTML files for each route
    const response = await context.next();
    
    // Add bot-specific headers for better crawling
    const headers = new Headers(response.headers);
    headers.set('X-Served-To', 'Bot');
    headers.set('X-Robots-Tag', 'index, follow');
    headers.set('Cache-Control', 'public, max-age=3600, s-maxage=86400');
    
    return new Response(response.body, {
      status: response.status,
      statusText: response.statusText,
      headers
    });
  }
  
  return context.next();
}

